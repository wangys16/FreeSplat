[2024-10-12 16:33:24,979][py.warnings][WARNING] - /home/wang/anaconda3/envs/ps/lib/python3.10/site-packages/lightning_fabric/plugins/environments/slurm.py:204: The `srun` command is available on your system but is not used. HINT: If your intention is to run Lightning on SLURM, prepend your python command with `srun` like so: srun python /home/wang/lab/freesplat_github/src/main.py +experim ...
[2024-10-12 16:33:25,011][py.warnings][WARNING] - /home/wang/anaconda3/envs/ps/lib/python3.10/site-packages/timm/models/_factory.py:117: UserWarning: Mapping deprecated model name tf_efficientnetv2_s_in21ft1k to current tf_efficientnetv2_s.in21k_ft_in1k.
  model = create_fn(
[2024-10-12 16:33:25,368][timm.models._builder][INFO] - Loading pretrained weights from Hugging Face hub (timm/tf_efficientnetv2_s.in21k_ft_in1k)
[2024-10-12 16:33:25,619][timm.models._hub][INFO] - [timm/tf_efficientnetv2_s.in21k_ft_in1k] Safe alternative available for 'pytorch_model.bin' (as 'model.safetensors'). Loading weights using safetensors.
Setting up [LPIPS] perceptual loss: trunk [vgg], v[0.1], spatial [off]
[2024-10-12 16:33:25,851][py.warnings][WARNING] - /home/wang/anaconda3/envs/ps/lib/python3.10/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
[2024-10-12 16:33:25,851][py.warnings][WARNING] - /home/wang/anaconda3/envs/ps/lib/python3.10/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=VGG16_Weights.IMAGENET1K_V1`. You can also use `weights=VGG16_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
Loading model from: /home/wang/anaconda3/envs/ps/lib/python3.10/site-packages/lpips/weights/v0.1/vgg.pth
dataset:
    view_sampler: {'name': 'bounded', 'num_target_views': 4, 'num_context_views': 2, 'min_distance_between_context_views': 25, 'max_distance_between_context_views': 25, 'min_distance_to_context_views': 0, 'warm_up_steps': 15000, 'initial_min_distance_between_context_views': 15, 'initial_max_distance_between_context_views': 25}
    name: scannet
    roots: ['/home/wang/ssd/scannet/scannet_surn/scannet']
    make_baseline_1: False
    augment: True
    image_shape: [384, 512]
    background_color: [0.0, 0.0, 0.0]
    cameras_are_circular: False
    baseline_epsilon: 0.001
    max_fov: 100.0
    load_depth: True
    overfit_to_scene: None
    near: 0.5
    far: 15.0
model:
    encoder: {'backbone': {'name': 'efficientnet', 'model': 'efficientnet', 'd_out': 512}, 'name': 'freesplat', 'opacity_mapping': {'initial': 0.0, 'final': 0.0, 'warm_up': 1}, 'num_monocular_samples': 32, 'num_surfaces': 1, 'predict_opacity': False, 'near_disparity': 3.0, 'gaussians_per_pixel': 3, 'gaussian_adapter': {'gaussian_scale_min': 0.5, 'gaussian_scale_max': 15.0, 'sh_degree': 2, 'depth_sup': True}, 'd_feature': 128, 'epipolar_transformer': {'self_attention': {'patch_size': 4, 'num_octaves': 10, 'num_layers': 2, 'num_heads': 4, 'd_token': 128, 'd_dot': 128, 'd_mlp': 256}, 'num_octaves': 10, 'num_layers': 2, 'num_heads': 4, 'num_samples': 32, 'd_dot': 128, 'd_mlp': 256, 'downscale': 4}, 'visualizer': {'num_samples': 8, 'min_resolution': 256, 'export_ply': False}, 'apply_bounds_shim': False, 'use_epipolar_transformer': False, 'use_transmittance': False, 'load_depth': False, 'est_depth': 'cost', 'unimatch_weights_path': 'checkpoints/gmdepth-scale1-resumeflowthings-scannet-5d9d7964.pth', 'multiview_trans_attn_split': 2, 'costvolume_unet_feat_dim': 128, 'costvolume_unet_channel_mult': [1, 1, 1], 'costvolume_unet_attn_res': [], 'depth_unet_feat_dim': 64, 'depth_unet_attn_res': [], 'depth_unet_channel_mult': [1, 1, 1], 'downscale_factor': 4, 'shim_patch_size': 4, 'wo_depth_refine': False, 'wo_cost_volume': False, 'wo_backbone_cross_attn': False, 'wo_cost_volume_refine': False, 'use_epipolar_trans': False, 'num_views': 2, 'num_depth_candidates': 128}
    decoder: {'name': 'splatting_cuda'}
loss:
    mse: {'weight': 1.0}
    lpips: {'weight': 0.05, 'apply_after_step': 0}
output_dir: train_2views
wandb:
    project: pixelsplat
    entity: placeholder
    name: scannet
    mode: offline
    tags: ['scannet', '384x512']
mode: train
data_loader:
    train: {'num_workers': 16, 'persistent_workers': True, 'batch_size': 1, 'seed': 1234}
    test: {'num_workers': 4, 'persistent_workers': False, 'batch_size': 1, 'seed': 2345}
    val: {'num_workers': 1, 'persistent_workers': True, 'batch_size': 1, 'seed': 3456}
optimizer:
    lr: 0.0001
    warm_up_steps: 100
    cosine_lr: True
checkpointing:
    load: None
    every_n_train_steps: 10000
    save_top_k: -1
train:
    load_depth: None
    depth_mode: depth
    extended_visualization: False
    depth_sup: True
test:
    output_path: outputs/test
seed: 111123
strict: True
trainer:
    max_steps: 300001
    val_check_interval: 5000
    gradient_clip_val: 0.01
    prog_bar: True
--------------------data root: /home/wang/ssd/scannet/scannet_surn/scannet
[2024-10-12 16:33:27,076][py.warnings][WARNING] - /home/wang/anaconda3/envs/ps/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:441: The 'val_dataloader' does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` to `num_workers=23` in the `DataLoader` to improve performance.
validation step 0; scene = ['scene0000_01_3']; context = [[2179, 2194]]
[2024-10-12 16:33:28,260][py.warnings][WARNING] - /home/wang/lab/freesplat_github/src/model/encoder/common/gaussian_adapter.py:36: UserWarning: torch.range is deprecated and will be removed in a future release because its behavior is inconsistent with Python's range builtin. Instead, use torch.arange, which produces values in [start, end).
  i_coords, j_coords = torch.meshgrid(torch.range(0,height-1), torch.range(0,width-1), indexing='ij')
Setting up [LPIPS] perceptual loss: trunk [vgg], v[0.1], spatial [off]
You are using a CUDA device ('NVIDIA GeForce RTX 4090') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
  | Name    | Type                 | Params
-------------------------------------------------
0 | encoder | EncoderFreeSplat     | 50.5 M
1 | decoder | DecoderSplattingCUDA | 0
2 | losses  | ModuleList           | 0
-------------------------------------------------
50.5 M    Trainable params
0         Non-trainable params
50.5 M    Total params
202.177   Total estimated model params size (MB)
Loading model from: /home/wang/anaconda3/envs/ps/lib/python3.10/site-packages/lpips/weights/v0.1/vgg.pth
psnr: 14.447948455810547 ssim: 0.6289023756980896 lpips: 0.8050087690353394 num: 4
[2024-10-12 16:33:29,716][py.warnings][WARNING] - /home/wang/anaconda3/envs/ps/lib/python3.10/site-packages/pytorch_lightning/utilities/data.py:77: Trying to infer the `batch_size` from an ambiguous collection. The batch size we found is 1. To avoid any miscalculations, use `self.log(..., batch_size=batch_size)`.
[2024-10-12 16:33:29,723][py.warnings][WARNING] - /home/wang/lab/freesplat_github/src/model/model_wrapper.py:55: RuntimeWarning: divide by zero encountered in divide
  disp_map = 1/depth_map
psnr=14.447948455810547 lpips=0.8050087690353394 ssim=0.6289023756980896
--------------------data root: /home/wang/ssd/scannet/scannet_surn/scannet
[2024-10-12 16:33:32,889][py.warnings][WARNING] - /home/wang/lab/freesplat_github/src/model/encoder/common/gaussian_adapter.py:36: UserWarning: torch.range is deprecated and will be removed in a future release because its behavior is inconsistent with Python's range builtin. Instead, use torch.arange, which produces values in [start, end).
  i_coords, j_coords = torch.meshgrid(torch.range(0,height-1), torch.range(0,width-1), indexing='ij')
[2024-10-12 16:33:33,086][py.warnings][WARNING] - /home/wang/lab/freesplat_github/src/model/model_wrapper.py:285: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  f"psnr = {torch.mean(torch.tensor(psnr)):.2f}"
train step 0; scene = ['scene0005_00']; context = [[741, 762]]; loss = 0.107316 psnr = 11.14 loss_mse = 0.077039 loss_lpips = 0.030277 gs_ratio = 0.929535
train step 10; scene = ['scene0397_01']; context = [[878, 894]]; loss = 0.107671 psnr = 10.04 loss_mse = 0.078614 loss_lpips = 0.029057 gs_ratio = 0.804036
train step 20; scene = ['scene0211_01']; context = [[194, 209]]; loss = 0.119077 psnr = 10.21 loss_mse = 0.089342 loss_lpips = 0.029735 gs_ratio = 0.570755
train step 30; scene = ['scene0029_02']; context = [[519, 543]]; loss = 0.129004 psnr = 12.13 loss_mse = 0.099665 loss_lpips = 0.029339 gs_ratio = 0.903361
train step 40; scene = ['scene0298_00']; context = [[670, 686]]; loss = 0.104817 psnr = 11.65 loss_mse = 0.075401 loss_lpips = 0.029416 gs_ratio = 0.847519
train step 50; scene = ['scene0349_01']; context = [[1210, 1232]]; loss = 0.101939 psnr = 11.82 loss_mse = 0.071616 loss_lpips = 0.030323 gs_ratio = 0.587064
train step 60; scene = ['scene0505_00']; context = [[1901, 1925]]; loss = 0.118005 psnr = 10.17 loss_mse = 0.088538 loss_lpips = 0.029467 gs_ratio = 0.802137
train step 70; scene = ['scene0188_00']; context = [[931, 951]]; loss = 0.106260 psnr = 11.81 loss_mse = 0.079014 loss_lpips = 0.027246 gs_ratio = 0.892863
train step 80; scene = ['scene0323_00']; context = [[197, 215]]; loss = 0.109589 psnr = 9.57 loss_mse = 0.083134 loss_lpips = 0.026455 gs_ratio = 0.625938
[2024-10-12 16:34:08,171][py.warnings][WARNING] - /home/wang/anaconda3/envs/ps/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py:54: Detected KeyboardInterrupt, attempting graceful shutdown...